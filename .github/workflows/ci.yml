name: CI
on:
  merge_group:
  pull_request:
    paths-ignore:
      - '**.md'

env:
  GO_VERSION: 1.19

jobs:
  verification:
    name: Verification
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check licenses
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make license-check

      - name: Run verification
        run: make check

  build_all:
    needs: verification
    name: Build
    uses: ./.github/workflows/reusable-build-and-push.yml
    with:
      image_tag: ${{ github.sha }}
      push: false
      upload: true

  e2e:
    name: E2E
    needs: build_all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Load Docker images
        run: |
          docker load --input kubeclarity/kubeclarity.tar
          docker load --input runtime_k8s_scanner/runtime_k8s_scanner.tar
          docker load --input kubeclarity-sbom-db/kubeclarity-sbom-db.tar
          docker load --input cis_docker_benchmark_scanner/cis_docker_benchmark_scanner.tar
          docker image ls -a

      - name: Edit values.yaml
        id: edit_values
        run: |
          sed -i 's/v0.0.0-dev/v0.0.0-${{ github.sha }}/g' charts/kubeclarity/Chart.yaml
          sed -i 's/latest/${{ github.sha }}/g' charts/kubeclarity/values.yaml
          sed -i 's/Always/IfNotPresent/g' charts/kubeclarity/values.yaml
          cat charts/kubeclarity/values.yaml

      - name: Build CLI
        run: |
          make cli
          mv ./cli/bin/cli ./e2e/kubeclarity-cli

      - name: Run e2e tests
        run: make e2e

# We are using the following step to be the status check in the PRs
  build:
    needs: build_all
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Build All Done
        run: echo "Done"

  lint_chart:
    name: Lint Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Replace version
        id: replace_version
        run: find . -type f -name "values.yaml" -o -name "Chart.yaml" |
          xargs sed -i -e s/latest/v1.0.0-${{ github.sha }}/g

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.8.1

      - uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Add Bitnami Repository
        run: helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Add Aqua Security Repository
        run: helm repo add aquasecurity https://aquasecurity.github.io/helm-charts

      - name: Run chart-testing (lint)
        run: ct lint --debug --config charts/testing.yaml
